{
  "id": 0,
  "name": "@lucaspaganini/value-objects - v1.2.0",
  "kind": 0,
  "flags": {},
  "originalName": "@lucaspaganini/value-objects",
  "children": [
    {
      "id": 132,
      "name": "\"core/any\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/any.ts",
      "children": [
        {
          "id": 138,
          "name": "VOAnyConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 139,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            }
          ],
          "children": [
            {
              "id": 140,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 141,
                  "name": "new VOAnyConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 142,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 20,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "VOCRawInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 133,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "InstanceType"
                      }
                    ],
                    "name": "VOAnyInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/any.ts",
                  "line": 9,
                  "character": 70
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [140]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/any.ts",
              "line": 9,
              "character": 33
            }
          ]
        },
        {
          "id": 133,
          "name": "VOAnyInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 134,
              "name": "VO",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 2,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValueObject"
              }
            }
          ],
          "children": [
            {
              "id": 135,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/any.ts",
                  "line": 5,
                  "character": 16
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "VO",
                "constraint": {
                  "type": "reference",
                  "id": 2,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "name": "ValueObject"
                }
              }
            },
            {
              "id": 136,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 137,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 18,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "VO",
                        "constraint": {
                          "type": "reference",
                          "id": 2,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "ValueObject"
                        }
                      }
                    ],
                    "name": "VORaw"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/any.ts",
                  "line": 6,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [135]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [136]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/any.ts",
              "line": 4,
              "character": 30
            }
          ]
        },
        {
          "id": 143,
          "name": "VOAny",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 144,
              "name": "VOAny",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 145,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 146,
                  "name": "VOs",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "VOC",
                        "constraint": {
                          "type": "reference",
                          "id": 12,
                          "name": "ValueObjectContructor"
                        }
                      }
                    ],
                    "name": "Array"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 138,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                ],
                "name": "VOAnyConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/any.ts",
              "line": 13,
              "character": 18
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [138, 133]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [143]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/any.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 206,
      "name": "\"core/array\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/array.ts",
      "children": [
        {
          "id": 217,
          "name": "VOArrayConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 218,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            }
          ],
          "children": [
            {
              "id": 219,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 220,
                  "name": "new VOArrayConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 221,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 20,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "VOC",
                                "constraint": {
                                  "type": "reference",
                                  "id": 12,
                                  "name": "ValueObjectContructor"
                                }
                              }
                            ],
                            "name": "VOCRawInit"
                          }
                        ],
                        "name": "Array"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 211,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "InstanceType"
                      }
                    ],
                    "name": "VOArrayInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 31,
                  "character": 72
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [219]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/array.ts",
              "line": 31,
              "character": 35
            }
          ]
        },
        {
          "id": 211,
          "name": "VOArrayInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 212,
              "name": "VO",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 2,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValueObject"
              }
            }
          ],
          "children": [
            {
              "id": 213,
              "name": "toArray",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 214,
                  "name": "toArray",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "VO",
                        "constraint": {
                          "type": "reference",
                          "id": 2,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "any"
                            }
                          ],
                          "name": "ValueObject"
                        }
                      }
                    ],
                    "name": "Array"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 27,
                  "character": 9
                }
              ]
            },
            {
              "id": 215,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 216,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "reference",
                        "id": 18,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VO",
                            "constraint": {
                              "type": "reference",
                              "id": 2,
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "ValueObject"
                            }
                          }
                        ],
                        "name": "VORaw"
                      }
                    ],
                    "name": "Array"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 28,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [213, 215]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/array.ts",
              "line": 26,
              "character": 32
            }
          ]
        },
        {
          "id": 207,
          "name": "VOArrayOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 210,
              "name": "maxErrors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive errors to acumulate before throwing."
              },
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 23,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 209,
              "name": "maxLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive length."
              },
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 17,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 208,
              "name": "minLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Minimum inclusive length."
              },
              "sources": [
                {
                  "fileName": "src/core/array.ts",
                  "line": 11,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [210, 209, 208]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/array.ts",
              "line": 6,
              "character": 31
            }
          ]
        },
        {
          "id": 222,
          "name": "VOArray",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 223,
              "name": "VOArray",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 224,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 225,
                  "name": "VO",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                },
                {
                  "id": 226,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 207,
                    "name": "VOArrayOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 217,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                ],
                "name": "VOArrayConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/array.ts",
              "line": 35,
              "character": 20
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [217, 211, 207]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [222]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/array.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 24,
      "name": "\"core/errors\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/errors.ts",
      "children": [
        {
          "id": 123,
          "name": "LogicError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 125,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 127,
                  "name": "new LogicError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 128,
                      "name": "expected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 123,
                    "name": "LogicError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 69,
                  "character": 43
                }
              ]
            },
            {
              "id": 126,
              "name": "expected",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 70,
                  "character": 38
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 124,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 69,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Invalid logic"
              },
              "defaultValue": "\"Invalid logic\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 129,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 130,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 131,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [125]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [126, 124, 129, 130, 131]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 68,
              "character": 23
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 25,
          "name": "MaxLengthError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 27,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 30,
                  "name": "new MaxLengthError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 31,
                      "name": "maxLength",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 32,
                      "name": "length",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 25,
                    "name": "MaxLengthError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 2,
                  "character": 38
                }
              ]
            },
            {
              "id": 29,
              "name": "length",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 3,
                  "character": 71
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 28,
              "name": "maxLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 3,
                  "character": 39
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 26,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 2,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Too long"
              },
              "defaultValue": "\"Too long\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 33,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 34,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 35,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              },
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 25,
                  "name": "MaxLengthError"
                },
                {
                  "type": "reference",
                  "id": 36,
                  "name": "MaxSizeError"
                },
                {
                  "type": "reference",
                  "id": 47,
                  "name": "MinLengthError"
                },
                {
                  "type": "reference",
                  "id": 58,
                  "name": "MinSizeError"
                },
                {
                  "type": "reference",
                  "id": 69,
                  "name": "NotInSetError"
                },
                {
                  "type": "reference",
                  "id": 82,
                  "name": "NotIntegerError"
                },
                {
                  "type": "reference",
                  "id": 93,
                  "name": "PatternError"
                },
                {
                  "type": "reference",
                  "id": 116,
                  "name": "UnknownError"
                },
                {
                  "type": "reference",
                  "id": 123,
                  "name": "LogicError"
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [27]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [29, 28, 26, 33, 34, 35]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 1,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 36,
          "name": "MaxSizeError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 38,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 41,
                  "name": "new MaxSizeError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 42,
                      "name": "max",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 43,
                      "name": "valueSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 36,
                    "name": "MaxSizeError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 9,
                  "character": 37
                }
              ]
            },
            {
              "id": 39,
              "name": "max",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 10,
                  "character": 33
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 37,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 9,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Too big"
              },
              "defaultValue": "\"Too big\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 44,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 45,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 40,
              "name": "valueSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 10,
                  "character": 68
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 46,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [38]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [39, 37, 44, 45, 40, 46]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 8,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 47,
          "name": "MinLengthError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 49,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 52,
                  "name": "new MinLengthError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 53,
                      "name": "minLength",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 54,
                      "name": "length",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 47,
                    "name": "MinLengthError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 16,
                  "character": 39
                }
              ]
            },
            {
              "id": 51,
              "name": "length",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 17,
                  "character": 71
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 48,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 16,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Too short"
              },
              "defaultValue": "\"Too short\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 50,
              "name": "minLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 17,
                  "character": 39
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 55,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 56,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 57,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [49]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [51, 48, 50, 55, 56, 57]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 15,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 58,
          "name": "MinSizeError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 60,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 63,
                  "name": "new MinSizeError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 64,
                      "name": "min",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 65,
                      "name": "valueSize",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 58,
                    "name": "MinSizeError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 23,
                  "character": 39
                }
              ]
            },
            {
              "id": 59,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 23,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Too small"
              },
              "defaultValue": "\"Too small\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 61,
              "name": "min",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 24,
                  "character": 33
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 66,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 67,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 62,
              "name": "valueSize",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 24,
                  "character": 68
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 68,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [60]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [59, 61, 66, 67, 62, 68]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 22,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 69,
          "name": "NotInSetError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 71,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 75,
                  "name": "new NotInSetError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 76,
                      "name": "set",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Array"
                      }
                    },
                    {
                      "id": 77,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 78,
                      "name": "prop",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 69,
                    "name": "NotInSetError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 30,
                  "character": 52
                }
              ]
            },
            {
              "id": 70,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 30,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Value not found in set"
              },
              "defaultValue": "\"Value not found in set\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 79,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 74,
              "name": "prop",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isOptional": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 31,
                  "character": 101
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 72,
              "name": "set",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 31,
                  "character": 33
                }
              ],
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Array"
              }
            },
            {
              "id": 80,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 73,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 31,
                  "character": 71
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 81,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [71]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [70, 79, 74, 72, 80, 73, 81]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 29,
              "character": 26
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 82,
          "name": "NotIntegerError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 84,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 87,
                  "name": "new NotIntegerError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 88,
                      "name": "value",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 89,
                      "name": "prop",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 82,
                    "name": "NotIntegerError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 37,
                  "character": 44
                }
              ]
            },
            {
              "id": 83,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 37,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Not an integer"
              },
              "defaultValue": "\"Not an integer\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 90,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 86,
              "name": "prop",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isOptional": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 38,
                  "character": 65
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 91,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 85,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 38,
                  "character": 35
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 92,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [84]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [83, 90, 86, 91, 85, 92]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 36,
              "character": 28
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 93,
          "name": "PatternError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 95,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 96,
                  "name": "new PatternError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 93,
                    "name": "PatternError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 44,
                  "character": 57
                }
              ]
            },
            {
              "id": 94,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 44,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Value doesn't match pattern"
              },
              "defaultValue": "\"Value doesn't match pattern\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 97,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 98,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 99,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [95]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [94, 97, 98, 99]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 43,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        },
        {
          "id": 100,
          "name": "RawTypeError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 102,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 106,
                  "name": "new RawTypeError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 107,
                      "name": "expected",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 108,
                      "name": "actual",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 109,
                      "name": "prop",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 100,
                    "name": "RawTypeError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 51,
                  "character": 50
                }
              ]
            },
            {
              "id": 104,
              "name": "actual",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 52,
                  "character": 70
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 103,
              "name": "expected",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 52,
                  "character": 38
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 101,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 51,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Wrong raw value type"
              },
              "defaultValue": "\"Wrong raw value type\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 113,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 105,
              "name": "prop",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isOptional": true,
                "isConstructorProperty": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 52,
                  "character": 100
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 114,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 115,
              "name": "TypeError",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1039,
                  "character": 21
                }
              ],
              "type": {
                "type": "reference",
                "name": "TypeErrorConstructor"
              },
              "extendedBy": [
                {
                  "type": "reference",
                  "id": 100,
                  "name": "RawTypeError"
                }
              ]
            },
            {
              "id": 110,
              "name": "is",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "signatures": [
                {
                  "id": 111,
                  "name": "is",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 112,
                      "name": "err",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 35,
                        "name": "Error"
                      }
                    }
                  ],
                  "type": {
                    "type": "predicate",
                    "name": "err",
                    "asserts": false,
                    "targetType": {
                      "type": "reference",
                      "name": "RawTypeError"
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 56,
                  "character": 11
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [102]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [104, 103, 101, 113, 105, 114, 115]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [110]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 50,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 115,
              "name": "TypeError"
            }
          ]
        },
        {
          "id": 116,
          "name": "UnknownError",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 118,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 119,
                  "name": "new UnknownError",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 116,
                    "name": "UnknownError"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 62,
                  "character": 43
                }
              ]
            },
            {
              "id": 117,
              "name": "message",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isPublic": true,
                "isExported": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "src/core/errors.ts",
                  "line": 62,
                  "character": 25
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Unknown error"
              },
              "defaultValue": "\"Unknown error\"",
              "overwrites": {
                "type": "reference",
                "name": "Error.message"
              }
            },
            {
              "id": 120,
              "name": "name",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 33,
                "name": "Error.name"
              }
            },
            {
              "id": 121,
              "name": "stack",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 975,
                  "character": 9
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "id": 34,
                "name": "Error.stack"
              }
            },
            {
              "id": 122,
              "name": "Error",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isStatic": true,
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 984,
                  "character": 17
                }
              ],
              "type": {
                "type": "reference",
                "name": "ErrorConstructor"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [118]
            },
            {
              "title": "Properties",
              "kind": 1024,
              "children": [117, 120, 121, 122]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/errors.ts",
              "line": 61,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 35,
              "name": "Error"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [123, 25, 36, 47, 58, 69, 82, 93, 100, 116]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/errors.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 227,
      "name": "\"core/float\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/float.ts",
      "children": [
        {
          "id": 236,
          "name": "VOFloatConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 237,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 238,
                  "name": "new VOFloatConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 239,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 233,
                    "name": "VOFloatInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 33,
                  "character": 37
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [237]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/float.ts",
              "line": 33,
              "character": 35
            }
          ]
        },
        {
          "id": 233,
          "name": "VOFloatInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 234,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 235,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 30,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [234]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/float.ts",
              "line": 29,
              "character": 32
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 477,
              "name": "Percentage"
            }
          ]
        },
        {
          "id": 228,
          "name": "VOFloatOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 230,
              "name": "max",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive acceptable value.\nCan't be smaller than `min`."
              },
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 14,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 229,
              "name": "min",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Minimum inclusive acceptable value.\nCan't be bigger than `max`."
              },
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 8,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 231,
              "name": "precision",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Floating point precision.\nCan't be less than zero."
              },
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 20,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 232,
              "name": "precisionTrim",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Trimming strategy for numbers with more precision than `precision`.",
                "tags": [
                  {
                    "tag": "default",
                    "text": "\"round\"\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 26,
                  "character": 15
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "stringLiteral",
                    "value": "floor"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "ceil"
                  },
                  {
                    "type": "stringLiteral",
                    "value": "round"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [230, 229, 231, 232]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/float.ts",
              "line": 3,
              "character": 31
            }
          ]
        },
        {
          "id": 240,
          "name": "VOFloat",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "Function to create a floating point number value object constructor.",
            "returns": "Class constructor that accepts a number for instantiation\nand returns that number when {@link VOFloatInstance.valueOf} is called.\n",
            "tags": [
              {
                "tag": "example",
                "text": "\n```typescript\nclass MyFloat extends VOFloat() {}\n\nconst float1 = new MyFloat(5); // OK\nfloat1.valueOf(); // 5\n\nconst float2 = new MyFloat(5.0); // OK\nfloat2.valueOf(); // 5\n\nconst float3 = new MyFloat(5.5); // OK\nfloat3.valueOf(); // 5.5\n\nconst float4 = new MyFloat('5.5'); // Compilation error: Not a number\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass PositiveNumber extends VOFloat({ min: 0 }) {} // OK\nnew PositiveNumber(0); // OK\nnew PositiveNumber(1000000); // Ok\nnew PositiveNumber(-1); // Runtime error: Too small\nnew PositiveNumber(1.5); // OK\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass FloatWithValidRange extends VOFloat({ min: -100.5, max: 100.5 }) {} // OK\nnew FloatWithValidRange(-100); // OK\nnew FloatWithValidRange(100); // Ok\nnew FloatWithValidRange(-100.5); // OK\nnew FloatWithValidRange(-101); // Runtime error: Too small\nnew FloatWithValidRange(101); // Runtime error: Too big\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass FloatWithInvalidRange extends VOFloat({ min: 100, max: -100 }) {} // Runtime error: Invalid logic (options.min should not be bigger than options.max)\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass LimitedPrecisionFloat extends VOFloat({\n  precision: 5,\n  precisionTrim: 'round'\n}) {} // OK\nconst limited1 = new LimitedPrecisionFloat(0.123456789);\nlimited1.valueOf(); // 0.12346 => Only 5 precision digits and it's rounded\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass LimitedPrecisionFloatWithRange extends VOFloat({\n  min: 1,\n  max: 999.999,\n  precision: 2,\n  precisionTrim: 'ceil'\n}) {} // OK\nnew LimitedPrecisionFloatWithRange(-100); // Runtime error: Too small\nnew LimitedPrecisionFloatWithRange(100); // Ok\nnew LimitedPrecisionFloatWithRange(0.9999); // OK (rounds to 1 and passes the minimum)\nnew LimitedPrecisionFloatWithRange(999.999); // Runtime error: Too big (rounds to 1000 and doesn't pass the maximum)\nconst limited2 = new LimitedPrecisionFloatWithRange(0.123456789);\nlimited2.valueOf(); // 0.13 => Only 2 precision digits and it's rounded up because we're using \"ceil\"\n```\n"
              }
            ]
          },
          "signatures": [
            {
              "id": 241,
              "name": "VOFloat",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Function to create a floating point number value object constructor.",
                "returns": "Class constructor that accepts a number for instantiation\nand returns that number when {@link VOFloatInstance.valueOf} is called.\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass MyFloat extends VOFloat() {}\n\nconst float1 = new MyFloat(5); // OK\nfloat1.valueOf(); // 5\n\nconst float2 = new MyFloat(5.0); // OK\nfloat2.valueOf(); // 5\n\nconst float3 = new MyFloat(5.5); // OK\nfloat3.valueOf(); // 5.5\n\nconst float4 = new MyFloat('5.5'); // Compilation error: Not a number\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass PositiveNumber extends VOFloat({ min: 0 }) {} // OK\nnew PositiveNumber(0); // OK\nnew PositiveNumber(1000000); // Ok\nnew PositiveNumber(-1); // Runtime error: Too small\nnew PositiveNumber(1.5); // OK\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass FloatWithValidRange extends VOFloat({ min: -100.5, max: 100.5 }) {} // OK\nnew FloatWithValidRange(-100); // OK\nnew FloatWithValidRange(100); // Ok\nnew FloatWithValidRange(-100.5); // OK\nnew FloatWithValidRange(-101); // Runtime error: Too small\nnew FloatWithValidRange(101); // Runtime error: Too big\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass FloatWithInvalidRange extends VOFloat({ min: 100, max: -100 }) {} // Runtime error: Invalid logic (options.min should not be bigger than options.max)\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass LimitedPrecisionFloat extends VOFloat({\n  precision: 5,\n  precisionTrim: 'round'\n}) {} // OK\nconst limited1 = new LimitedPrecisionFloat(0.123456789);\nlimited1.valueOf(); // 0.12346 => Only 5 precision digits and it's rounded\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass LimitedPrecisionFloatWithRange extends VOFloat({\n  min: 1,\n  max: 999.999,\n  precision: 2,\n  precisionTrim: 'ceil'\n}) {} // OK\nnew LimitedPrecisionFloatWithRange(-100); // Runtime error: Too small\nnew LimitedPrecisionFloatWithRange(100); // Ok\nnew LimitedPrecisionFloatWithRange(0.9999); // OK (rounds to 1 and passes the minimum)\nnew LimitedPrecisionFloatWithRange(999.999); // Runtime error: Too big (rounds to 1000 and doesn't pass the maximum)\nconst limited2 = new LimitedPrecisionFloatWithRange(0.123456789);\nlimited2.valueOf(); // 0.13 => Only 2 precision digits and it's rounded up because we're using \"ceil\"\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 242,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Customizations for the returned class constructor"
                  },
                  "type": {
                    "type": "reference",
                    "id": 228,
                    "name": "VOFloatOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 236,
                "name": "VOFloatConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/float.ts",
              "line": 118,
              "character": 20
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [236, 233, 228]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [240]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/float.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 185,
      "name": "\"core/functions\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/functions.ts",
      "children": [
        {
          "id": 186,
          "name": "ValueObjectFunctions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 187,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            }
          ],
          "children": [
            {
              "id": 191,
              "name": "fromRawInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 192,
                  "name": "fromRawInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 193,
                      "name": "data",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 20,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "VOCRawInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 156,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "reference",
                            "id": 35,
                            "name": "Error"
                          }
                        ],
                        "name": "Array"
                      },
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "InstanceType"
                      }
                    ],
                    "name": "Either"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/functions.ts",
                  "line": 29,
                  "character": 13
                }
              ]
            },
            {
              "id": 188,
              "name": "isValidRawInit",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 189,
                  "name": "isValidRawInit",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 190,
                      "name": "v",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "predicate",
                    "name": "v",
                    "asserts": false,
                    "targetType": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "VOC",
                          "constraint": {
                            "type": "reference",
                            "id": 12,
                            "name": "ValueObjectContructor"
                          }
                        }
                      ],
                      "name": "VOCRawInit"
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/functions.ts",
                  "line": 28,
                  "character": 16
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [191, 188]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/functions.ts",
              "line": 27,
              "character": 37
            }
          ]
        },
        {
          "id": 198,
          "name": "makeFromRawInit",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 199,
              "name": "makeFromRawInit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 200,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 201,
                  "name": "VO",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "(Anonymous function)"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/functions.ts",
              "line": 13,
              "character": 28
            }
          ]
        },
        {
          "id": 202,
          "name": "makeFunctions",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 203,
              "name": "makeFunctions",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 204,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 205,
                  "name": "VO",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 186,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                ],
                "name": "ValueObjectFunctions"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/functions.ts",
              "line": 32,
              "character": 26
            }
          ]
        },
        {
          "id": 194,
          "name": "makeIsValidRawInit",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 195,
              "name": "makeIsValidRawInit",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 196,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 197,
                  "name": "VO",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "name": "(Anonymous function)"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/functions.ts",
              "line": 4,
              "character": 31
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [186]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [198, 202, 194]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/functions.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 337,
      "name": "\"core/index\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/index.ts",
      "children": [
        {
          "id": 354,
          "name": "LogicError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 123
        },
        {
          "id": 345,
          "name": "MaxLengthError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 25
        },
        {
          "id": 346,
          "name": "MaxSizeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 36
        },
        {
          "id": 347,
          "name": "MinLengthError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 47
        },
        {
          "id": 348,
          "name": "MinSizeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 58
        },
        {
          "id": 371,
          "name": "Noneable",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 290
        },
        {
          "id": 349,
          "name": "NotInSetError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 69
        },
        {
          "id": 350,
          "name": "NotIntegerError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 82
        },
        {
          "id": 351,
          "name": "PatternError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 93
        },
        {
          "id": 352,
          "name": "RawTypeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 100
        },
        {
          "id": 376,
          "name": "Setable",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 311
        },
        {
          "id": 353,
          "name": "UnknownError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 116
        },
        {
          "id": 340,
          "name": "VOAny",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 143
        },
        {
          "id": 339,
          "name": "VOAnyConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 138
        },
        {
          "id": 338,
          "name": "VOAnyInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 133
        },
        {
          "id": 344,
          "name": "VOArray",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 222
        },
        {
          "id": 343,
          "name": "VOArrayConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 217
        },
        {
          "id": 342,
          "name": "VOArrayInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 211
        },
        {
          "id": 341,
          "name": "VOArrayOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 207
        },
        {
          "id": 390,
          "name": "VOCRaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 22
        },
        {
          "id": 389,
          "name": "VOCRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 20
        },
        {
          "id": 358,
          "name": "VOFloat",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 240
        },
        {
          "id": 357,
          "name": "VOFloatConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 236
        },
        {
          "id": 356,
          "name": "VOFloatInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 233
        },
        {
          "id": 355,
          "name": "VOFloatOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 228
        },
        {
          "id": 366,
          "name": "VOInteger",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 254
        },
        {
          "id": 365,
          "name": "VOIntegerConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 250
        },
        {
          "id": 364,
          "name": "VOIntegerInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 247
        },
        {
          "id": 363,
          "name": "VOIntegerOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 244
        },
        {
          "id": 370,
          "name": "VOObject",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 268
        },
        {
          "id": 369,
          "name": "VOObjectConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 260
        },
        {
          "id": 368,
          "name": "VOObjectInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 265
        },
        {
          "id": 367,
          "name": "VOObjectOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 258
        },
        {
          "id": 374,
          "name": "VOOptional",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 291
        },
        {
          "id": 373,
          "name": "VOOptionalConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 284
        },
        {
          "id": 372,
          "name": "VOOptionalInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 274
        },
        {
          "id": 388,
          "name": "VORaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 18
        },
        {
          "id": 380,
          "name": "VOSet",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 315
        },
        {
          "id": 379,
          "name": "VOSetConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 305
        },
        {
          "id": 378,
          "name": "VOSetInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 301
        },
        {
          "id": 375,
          "name": "VOSetOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 298
        },
        {
          "id": 377,
          "name": "VOSetRaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 312
        },
        {
          "id": 384,
          "name": "VOString",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 334
        },
        {
          "id": 383,
          "name": "VOStringConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 330
        },
        {
          "id": 382,
          "name": "VOStringInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 327
        },
        {
          "id": 381,
          "name": "VOStringOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 322
        },
        {
          "id": 385,
          "name": "ValueObject",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 2
        },
        {
          "id": 387,
          "name": "ValueObjectContructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 12
        },
        {
          "id": 361,
          "name": "ValueObjectFunctions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 186
        },
        {
          "id": 360,
          "name": "makeFromRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 198
        },
        {
          "id": 362,
          "name": "makeFunctions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 202
        },
        {
          "id": 359,
          "name": "makeIsValidRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 194
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [
            354,
            345,
            346,
            347,
            348,
            371,
            349,
            350,
            351,
            352,
            376,
            353,
            340,
            339,
            338,
            344,
            343,
            342,
            341,
            390,
            389,
            358,
            357,
            356,
            355,
            366,
            365,
            364,
            363,
            370,
            369,
            368,
            367,
            374,
            373,
            372,
            388,
            380,
            379,
            378,
            375,
            377,
            384,
            383,
            382,
            381,
            385,
            387,
            361,
            360,
            362,
            359
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 243,
      "name": "\"core/integer\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/integer.ts",
      "children": [
        {
          "id": 250,
          "name": "VOIntegerConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 251,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 252,
                  "name": "new VOIntegerConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 253,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 247,
                    "name": "VOIntegerInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/integer.ts",
                  "line": 21,
                  "character": 39
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [251]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/integer.ts",
              "line": 21,
              "character": 37
            }
          ]
        },
        {
          "id": 247,
          "name": "VOIntegerInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 248,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 249,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/integer.ts",
                  "line": 18,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [248]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/integer.ts",
              "line": 17,
              "character": 34
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 454,
              "name": "NaturalNumber"
            }
          ]
        },
        {
          "id": 244,
          "name": "VOIntegerOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 246,
              "name": "max",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive acceptable value.\nCan't be smaller than `min`."
              },
              "sources": [
                {
                  "fileName": "src/core/integer.ts",
                  "line": 14,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 245,
              "name": "min",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Minimum inclusive acceptable value.\nCan't be bigger than `max`."
              },
              "sources": [
                {
                  "fileName": "src/core/integer.ts",
                  "line": 8,
                  "character": 5
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [246, 245]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/integer.ts",
              "line": 3,
              "character": 33
            }
          ]
        },
        {
          "id": 254,
          "name": "VOInteger",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "Function to create an integer number value object constructor.",
            "text": "> NOTE: If you want to accept floating point numbers and convert them to\nintegers, you can use {@link VOFloat} and set the precision option to 0.\n",
            "returns": "Class constructor that accepts a (integer) number for instantiation\nand returns that number when {@link VOIntegerInstance.valueOf} is called.\n",
            "tags": [
              {
                "tag": "example",
                "text": "\n```typescript\nclass MyInteger extends VOInteger() {}\n\nconst int1 = new MyInteger(5); // OK\nint1.valueOf(); // 5\n\nconst int2 = new MyInteger(5.0); // OK\nint2.valueOf(); // 5\n\nconst int3 = new MyInteger(5.5); // Runtime error: Not an integer\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass NaturalNumber extends VOInteger({ min: 0 }) {} // OK\nnew NaturalNumber(0); // OK\nnew NaturalNumber(1000000); // Ok\nnew NaturalNumber(-1); // Runtime error: Too small\nnew NaturalNumber(1.5); // Runtime error: Not an integer\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass MyFloatRangeInteger extends VOInteger({ min: -100.5, max: 100.5 }) {} // OK\nnew MyFloatRangeInteger(-100); // OK\nnew MyFloatRangeInteger(100); // Ok\nnew MyFloatRangeInteger(-101); // Runtime error: Too small\nnew MyFloatRangeInteger(101); // Runtime error: Too big\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass MyInvalidInteger extends VOInteger({ min: 100, max: -100 }) {} // Runtime error: Invalid logic (options.min should not be bigger than options.max)\n```\n"
              }
            ]
          },
          "signatures": [
            {
              "id": 255,
              "name": "VOInteger",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Function to create an integer number value object constructor.",
                "text": "> NOTE: If you want to accept floating point numbers and convert them to\nintegers, you can use {@link VOFloat} and set the precision option to 0.\n",
                "returns": "Class constructor that accepts a (integer) number for instantiation\nand returns that number when {@link VOIntegerInstance.valueOf} is called.\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass MyInteger extends VOInteger() {}\n\nconst int1 = new MyInteger(5); // OK\nint1.valueOf(); // 5\n\nconst int2 = new MyInteger(5.0); // OK\nint2.valueOf(); // 5\n\nconst int3 = new MyInteger(5.5); // Runtime error: Not an integer\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass NaturalNumber extends VOInteger({ min: 0 }) {} // OK\nnew NaturalNumber(0); // OK\nnew NaturalNumber(1000000); // Ok\nnew NaturalNumber(-1); // Runtime error: Too small\nnew NaturalNumber(1.5); // Runtime error: Not an integer\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass MyFloatRangeInteger extends VOInteger({ min: -100.5, max: 100.5 }) {} // OK\nnew MyFloatRangeInteger(-100); // OK\nnew MyFloatRangeInteger(100); // Ok\nnew MyFloatRangeInteger(-101); // Runtime error: Too small\nnew MyFloatRangeInteger(101); // Runtime error: Too big\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass MyInvalidInteger extends VOInteger({ min: 100, max: -100 }) {} // Runtime error: Invalid logic (options.min should not be bigger than options.max)\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 256,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Customizations for the returned class constructor"
                  },
                  "type": {
                    "type": "reference",
                    "id": 244,
                    "name": "VOIntegerOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 250,
                "name": "VOIntegerConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/integer.ts",
              "line": 71,
              "character": 22
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [250, 247, 244]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [254]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/integer.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 257,
      "name": "\"core/object\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/object.ts",
      "children": [
        {
          "id": 260,
          "name": "VOObjectConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 261,
              "name": "O",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "O"
                  }
                ],
                "name": "VOObjectSchema"
              }
            }
          ],
          "children": [
            {
              "id": 262,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 263,
                  "name": "new VOObjectConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 264,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "O",
                            "constraint": {
                              "type": "reference",
                              "typeArguments": [
                                {
                                  "type": "typeParameter",
                                  "name": "O"
                                }
                              ],
                              "name": "VOObjectSchema"
                            }
                          }
                        ],
                        "name": "VOObjectRawInitSchema"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 265,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "O",
                        "constraint": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "typeParameter",
                              "name": "O"
                            }
                          ],
                          "name": "VOObjectSchema"
                        }
                      }
                    ],
                    "name": "VOObjectInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/object.ts",
                  "line": 25,
                  "character": 67
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [262]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/object.ts",
              "line": 25,
              "character": 36
            }
          ]
        },
        {
          "id": 258,
          "name": "VOObjectOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 259,
              "name": "maxErrors",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive errors to acumulate before throwing."
              },
              "sources": [
                {
                  "fileName": "src/core/object.ts",
                  "line": 11,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [259]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/object.ts",
              "line": 6,
              "character": 32
            }
          ]
        },
        {
          "id": 265,
          "name": "VOObjectInstance",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 266,
              "name": "O",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "O"
                  }
                ],
                "name": "VOObjectSchema"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/object.ts",
              "line": 22,
              "character": 28
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "O",
                        "constraint": {
                          "type": "reference",
                          "typeArguments": [
                            {
                              "type": "typeParameter",
                              "name": "O"
                            }
                          ],
                          "name": "VOObjectSchema"
                        }
                      }
                    ],
                    "name": "VOObjectRawSchema"
                  }
                ],
                "name": "ValueObjectWorkAround"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 267,
                  "name": "__type",
                  "kind": 65536,
                  "kindString": "Type literal",
                  "flags": {
                    "isExported": true
                  },
                  "sources": [
                    {
                      "fileName": "src/core/object.ts",
                      "line": 22,
                      "character": 105
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 268,
          "name": "VOObject",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 269,
              "name": "VOObject",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 270,
                  "name": "O",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "O"
                      }
                    ],
                    "name": "VOObjectSchema"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 271,
                  "name": "schema",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "O",
                    "constraint": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "O"
                        }
                      ],
                      "name": "VOObjectSchema"
                    }
                  }
                },
                {
                  "id": 272,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 258,
                    "name": "VOObjectOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 260,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "O",
                    "constraint": {
                      "type": "reference",
                      "typeArguments": [
                        {
                          "type": "typeParameter",
                          "name": "O"
                        }
                      ],
                      "name": "VOObjectSchema"
                    }
                  }
                ],
                "name": "VOObjectConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/object.ts",
              "line": 29,
              "character": 21
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [260, 258]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [265]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [268]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/object.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 273,
      "name": "\"core/optional\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/optional.ts",
      "children": [
        {
          "id": 284,
          "name": "VOOptionalConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 285,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            },
            {
              "id": 286,
              "name": "None",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 290,
                "name": "Noneable"
              }
            }
          ],
          "children": [
            {
              "id": 287,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 288,
                  "name": "new VOOptionalConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 289,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "id": 20,
                            "typeArguments": [
                              {
                                "type": "typeParameter",
                                "name": "VOC",
                                "constraint": {
                                  "type": "reference",
                                  "id": 12,
                                  "name": "ValueObjectContructor"
                                }
                              }
                            ],
                            "name": "VOCRawInit"
                          },
                          {
                            "type": "typeParameter",
                            "name": "None",
                            "constraint": {
                              "type": "reference",
                              "id": 290,
                              "name": "Noneable"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 274,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VOC",
                            "constraint": {
                              "type": "reference",
                              "id": 12,
                              "name": "ValueObjectContructor"
                            }
                          }
                        ],
                        "name": "InstanceType"
                      },
                      {
                        "type": "typeParameter",
                        "name": "None",
                        "constraint": {
                          "type": "reference",
                          "id": 290,
                          "name": "Noneable"
                        }
                      }
                    ],
                    "name": "VOOptionalInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/optional.ts",
                  "line": 15,
                  "character": 98
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [287]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/optional.ts",
              "line": 15,
              "character": 38
            }
          ]
        },
        {
          "id": 274,
          "name": "VOOptionalInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 275,
              "name": "VO",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 2,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValueObject"
              }
            },
            {
              "id": 276,
              "name": "None",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 290,
                "name": "Noneable"
              }
            }
          ],
          "children": [
            {
              "id": 277,
              "name": "value",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "src/core/optional.ts",
                  "line": 9,
                  "character": 7
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "typeParameter",
                    "name": "VO",
                    "constraint": {
                      "type": "reference",
                      "id": 2,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "any"
                        }
                      ],
                      "name": "ValueObject"
                    }
                  },
                  {
                    "type": "typeParameter",
                    "name": "None",
                    "constraint": {
                      "type": "reference",
                      "id": 290,
                      "name": "Noneable"
                    }
                  }
                ]
              }
            },
            {
              "id": 280,
              "name": "isNone",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 281,
                  "name": "isNone",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/optional.ts",
                  "line": 11,
                  "character": 8
                }
              ]
            },
            {
              "id": 278,
              "name": "isSome",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 279,
                  "name": "isSome",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/optional.ts",
                  "line": 10,
                  "character": 8
                }
              ]
            },
            {
              "id": 282,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 283,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "id": 18,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "VO",
                            "constraint": {
                              "type": "reference",
                              "id": 2,
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "any"
                                }
                              ],
                              "name": "ValueObject"
                            }
                          }
                        ],
                        "name": "VORaw"
                      },
                      {
                        "type": "typeParameter",
                        "name": "None",
                        "constraint": {
                          "type": "reference",
                          "id": 290,
                          "name": "Noneable"
                        }
                      }
                    ]
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/optional.ts",
                  "line": 12,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [277]
            },
            {
              "title": "Methods",
              "kind": 2048,
              "children": [280, 278, 282]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/optional.ts",
              "line": 8,
              "character": 35
            }
          ]
        },
        {
          "id": 290,
          "name": "Noneable",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "src/core/optional.ts",
              "line": 4,
              "character": 20
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "undefined"
              },
              {
                "type": "intrinsic",
                "name": "null"
              }
            ]
          }
        },
        {
          "id": 291,
          "name": "VOOptional",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "Function to create an optional value object constructor.",
            "returns": "Class constructor that accepts a None or the given\nvalue object raw initial value for instantiation and returns\nthat value or the None value when {@link VOOptionalInstance.valueOf} is called.\n\n\nThe class created by `VOOptional` ({@link VOOptionalInstance}) wraps the\ninner class and exposes it through the `value` property when it's instantiated.\nCalling {@link VOOptionalInstance.valueOf} will either return the `None` value\nor the `valueOf()` from the inner class.\n",
            "tags": [
              {
                "tag": "example",
                "text": "\n```typescript\nclass Name extends VOString({ trim: true, maxLength: 256, minLength: 1 }) {}\nnew Name('Lucas Paganini'); // OK\nnew Name(undefined); // Compilation error: Not a string\nnew Name(null); // Compilation error: Not a string\n\nclass OptionalName extends VOOptional(Name) {}\nnew OptionalName('Lucas Paganini'); // OK\nnew OptionalName(undefined); // OK\nnew OptionalName(null); // Compilation error: Expects string | undefined\n\nconst name = new Name('Lucas Paganini'); // OK\nname.valueOf(); // \"Lucas Paganini\"\n\nconst optional1 = new OptionalName('Lucas Paganini'); // OK\noptional1.value; // Name instance\noptional1.valueOf(); // \"Lucas Paganini\"\n\nconst optional2 = new OptionalName(undefined); // OK\noptional2.value; // undefined\noptional2.valueOf(); // undefined\n```\n\nThis function has no options but it does accept a second parameter which\nindicates what values should be considered nothing.\nFor default, it only accepts `undefined`, but you can change that to\n_also_ accept `null` or maybe to _just_ accept `null`.\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass Name extends VOString({ trim: true, maxLength: 256, minLength: 1 }) {}\nnew Name('Lucas Paganini'); // OK\nnew Name(undefined); // Compilation error: Not a string\nnew Name(null); // Compilation error: Not a string\n\nclass OptionalName1 extends VOOptional(Name) {}\nnew OptionalName1('Lucas Paganini'); // OK\nnew OptionalName1(undefined); // OK\nnew OptionalName1(null); // Compilation error: Expects string | undefined\n\nclass OptionalName2 extends VOOptional(Name, [undefined, null]) {}\nnew OptionalName2('Lucas Paganini'); // OK\nnew OptionalName2(undefined); // OK\nnew OptionalName2(null); // OK\n\nclass OptionalName3 extends VOOptional(Name, [null]) {}\nnew OptionalName3('Lucas Paganini'); // OK\nnew OptionalName3(undefined); // Compilation error: Expects string | null\nnew OptionalName3(null); // OK\n```\n"
              }
            ]
          },
          "signatures": [
            {
              "id": 292,
              "name": "VOOptional",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Function to create an optional value object constructor.",
                "returns": "Class constructor that accepts a None or the given\nvalue object raw initial value for instantiation and returns\nthat value or the None value when {@link VOOptionalInstance.valueOf} is called.\n\n\nThe class created by `VOOptional` ({@link VOOptionalInstance}) wraps the\ninner class and exposes it through the `value` property when it's instantiated.\nCalling {@link VOOptionalInstance.valueOf} will either return the `None` value\nor the `valueOf()` from the inner class.\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass Name extends VOString({ trim: true, maxLength: 256, minLength: 1 }) {}\nnew Name('Lucas Paganini'); // OK\nnew Name(undefined); // Compilation error: Not a string\nnew Name(null); // Compilation error: Not a string\n\nclass OptionalName extends VOOptional(Name) {}\nnew OptionalName('Lucas Paganini'); // OK\nnew OptionalName(undefined); // OK\nnew OptionalName(null); // Compilation error: Expects string | undefined\n\nconst name = new Name('Lucas Paganini'); // OK\nname.valueOf(); // \"Lucas Paganini\"\n\nconst optional1 = new OptionalName('Lucas Paganini'); // OK\noptional1.value; // Name instance\noptional1.valueOf(); // \"Lucas Paganini\"\n\nconst optional2 = new OptionalName(undefined); // OK\noptional2.value; // undefined\noptional2.valueOf(); // undefined\n```\n\nThis function has no options but it does accept a second parameter which\nindicates what values should be considered nothing.\nFor default, it only accepts `undefined`, but you can change that to\n_also_ accept `null` or maybe to _just_ accept `null`.\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass Name extends VOString({ trim: true, maxLength: 256, minLength: 1 }) {}\nnew Name('Lucas Paganini'); // OK\nnew Name(undefined); // Compilation error: Not a string\nnew Name(null); // Compilation error: Not a string\n\nclass OptionalName1 extends VOOptional(Name) {}\nnew OptionalName1('Lucas Paganini'); // OK\nnew OptionalName1(undefined); // OK\nnew OptionalName1(null); // Compilation error: Expects string | undefined\n\nclass OptionalName2 extends VOOptional(Name, [undefined, null]) {}\nnew OptionalName2('Lucas Paganini'); // OK\nnew OptionalName2(undefined); // OK\nnew OptionalName2(null); // OK\n\nclass OptionalName3 extends VOOptional(Name, [null]) {}\nnew OptionalName3('Lucas Paganini'); // OK\nnew OptionalName3(undefined); // Compilation error: Expects string | null\nnew OptionalName3(null); // OK\n```\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 293,
                  "name": "VOC",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "Value object constructor to make optional."
                  },
                  "type": {
                    "type": "reference",
                    "id": 12,
                    "name": "ValueObjectContructor"
                  }
                },
                {
                  "id": 294,
                  "name": "None",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "Values that represent nothing. Defaults to `undefined`."
                  },
                  "type": {
                    "type": "reference",
                    "id": 290,
                    "name": "Noneable"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 295,
                  "name": "VOC",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Value object constructor to make optional."
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  }
                },
                {
                  "id": 296,
                  "name": "nones",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true,
                    "isOptional": true
                  },
                  "comment": {
                    "shortText": "Values that represent nothing. Defaults to `[undefined]`."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "None",
                        "constraint": {
                          "type": "reference",
                          "id": 290,
                          "name": "Noneable"
                        }
                      }
                    ],
                    "name": "Array"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 284,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "VOC",
                    "constraint": {
                      "type": "reference",
                      "id": 12,
                      "name": "ValueObjectContructor"
                    }
                  },
                  {
                    "type": "typeParameter",
                    "name": "None",
                    "constraint": {
                      "type": "reference",
                      "id": 290,
                      "name": "Noneable"
                    }
                  }
                ],
                "name": "VOOptionalConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/optional.ts",
              "line": 91,
              "character": 23
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [284, 274]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [290]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [291]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/optional.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 297,
      "name": "\"core/set\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/set.ts",
      "children": [
        {
          "id": 305,
          "name": "VOSetConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 306,
              "name": "Element",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 311,
                "name": "Setable"
              }
            },
            {
              "id": 307,
              "name": "Strict",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "children": [
            {
              "id": 308,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 309,
                  "name": "new VOSetConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 310,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "reference",
                        "id": 312,
                        "typeArguments": [
                          {
                            "type": "typeParameter",
                            "name": "Element",
                            "constraint": {
                              "type": "reference",
                              "id": 311,
                              "name": "Setable"
                            }
                          },
                          {
                            "type": "typeParameter",
                            "name": "Strict",
                            "constraint": {
                              "type": "intrinsic",
                              "name": "boolean"
                            }
                          }
                        ],
                        "name": "VOSetRaw"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 301,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "Element",
                        "constraint": {
                          "type": "reference",
                          "id": 311,
                          "name": "Setable"
                        }
                      }
                    ],
                    "name": "VOSetInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/set.ts",
                  "line": 25,
                  "character": 84
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [308]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 25,
              "character": 33
            }
          ]
        },
        {
          "id": 301,
          "name": "VOSetInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 302,
              "name": "Element",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 311,
                "name": "Setable"
              }
            }
          ],
          "children": [
            {
              "id": 303,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 304,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "Element",
                    "constraint": {
                      "type": "reference",
                      "id": 311,
                      "name": "Setable"
                    }
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/set.ts",
                  "line": 22,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [303]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 21,
              "character": 30
            }
          ]
        },
        {
          "id": 298,
          "name": "VOSetOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 299,
              "name": "Strict",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "children": [
            {
              "id": 300,
              "name": "strict",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Whether it should expect the set elements literal types or their closest\nsupersets (eg. `true => boolean` and `\"abc\" => string`) for instantiation.\nDefaults to false."
              },
              "sources": [
                {
                  "fileName": "src/core/set.ts",
                  "line": 9,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "id": 299,
                "name": "Strict"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [300]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 3,
              "character": 29
            }
          ]
        },
        {
          "id": 311,
          "name": "Setable",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 12,
              "character": 19
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "number"
              },
              {
                "type": "intrinsic",
                "name": "boolean"
              }
            ]
          }
        },
        {
          "id": 312,
          "name": "VOSetRaw",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 313,
              "name": "Element",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "reference",
                "id": 311,
                "name": "Setable"
              }
            },
            {
              "id": 314,
              "name": "Strict",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 14,
              "character": 20
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "typeParameter",
              "name": "Strict",
              "constraint": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            "extendsType": {
              "type": "intrinsic",
              "name": "true"
            },
            "trueType": {
              "type": "typeParameter",
              "name": "Element",
              "constraint": {
                "type": "reference",
                "id": 311,
                "name": "Setable"
              }
            },
            "falseType": {
              "type": "union",
              "types": []
            }
          }
        },
        {
          "id": 315,
          "name": "VOSet",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "Function to create a set of elements value object constructor.",
            "returns": "Class constructor that accepts a set element for instantiation\nand returns that element when {@link VOSetInstance.valueOf} is called.\n",
            "tags": [
              {
                "tag": "example",
                "text": "\n```typescript\nclass TestSet extends VOSet([123, 'abc']) {}\nnew TestSet('abc'); // OK\nnew TestSet(''); // Runtime error: Not in set\nnew TestSet(1); // Runtime error: Not in set\nnew TestSet(false); // Compilation error: Expects string | number\n```\n\nThe coolest part of `VOSet` are definitely the conditional types\nin {@link VOSetRaw} that decide what is expected for instantiation and\nthe customization of this behaviour using the `options.strict` flag.\nSee the examples below.\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass NonStrictSet extends VOSet([123, true]) {}\nnew NonStrictSet(true); // OK\nnew NonStrictSet('abc'); // Compilation error: Expects number | boolean\nnew NonStrictSet(''); // Compilation error: Expects number | boolean\nnew NonStrictSet(1); // Runtime error: Not in set\nnew NonStrictSet(false); // Runtime error: Not in set\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass StrictSet extends VOSet([123, true], { strict: true }) {}\nnew StrictSet(true); // OK\nnew StrictSet('abc'); // Compilation error: Expects true | 123\nnew StrictSet(''); // Compilation error: Expects true | 123\nnew StrictSet(1); // Compilation error: Expects true | 123\nnew StrictSet(false); // Compilation error: Expects true | 123\n```\n"
              }
            ]
          },
          "signatures": [
            {
              "id": 316,
              "name": "VOSet",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Function to create a set of elements value object constructor.",
                "returns": "Class constructor that accepts a set element for instantiation\nand returns that element when {@link VOSetInstance.valueOf} is called.\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass TestSet extends VOSet([123, 'abc']) {}\nnew TestSet('abc'); // OK\nnew TestSet(''); // Runtime error: Not in set\nnew TestSet(1); // Runtime error: Not in set\nnew TestSet(false); // Compilation error: Expects string | number\n```\n\nThe coolest part of `VOSet` are definitely the conditional types\nin {@link VOSetRaw} that decide what is expected for instantiation and\nthe customization of this behaviour using the `options.strict` flag.\nSee the examples below.\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass NonStrictSet extends VOSet([123, true]) {}\nnew NonStrictSet(true); // OK\nnew NonStrictSet('abc'); // Compilation error: Expects number | boolean\nnew NonStrictSet(''); // Compilation error: Expects number | boolean\nnew NonStrictSet(1); // Runtime error: Not in set\nnew NonStrictSet(false); // Runtime error: Not in set\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass StrictSet extends VOSet([123, true], { strict: true }) {}\nnew StrictSet(true); // OK\nnew StrictSet('abc'); // Compilation error: Expects true | 123\nnew StrictSet(''); // Compilation error: Expects true | 123\nnew StrictSet(1); // Compilation error: Expects true | 123\nnew StrictSet(false); // Compilation error: Expects true | 123\n```\n"
                  }
                ]
              },
              "typeParameter": [
                {
                  "id": 317,
                  "name": "Element",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "Literal type of the set elements."
                  },
                  "type": {
                    "type": "reference",
                    "id": 311,
                    "name": "Setable"
                  }
                },
                {
                  "id": 318,
                  "name": "Strict",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "text": "Literal boolean indicating the `options.strict` flag."
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 319,
                  "name": "elements",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Elements in the set, they must be {@link Setable}."
                  },
                  "type": {
                    "type": "reference",
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "Element",
                        "constraint": {
                          "type": "reference",
                          "id": 311,
                          "name": "Setable"
                        }
                      }
                    ],
                    "name": "Array"
                  }
                },
                {
                  "id": 320,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Customizations for the returned class constructor."
                  },
                  "type": {
                    "type": "reference",
                    "id": 298,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "Strict",
                        "constraint": {
                          "type": "intrinsic",
                          "name": "boolean"
                        }
                      }
                    ],
                    "name": "VOSetOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 305,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "Element",
                    "constraint": {
                      "type": "reference",
                      "id": 311,
                      "name": "Setable"
                    }
                  },
                  {
                    "type": "typeParameter",
                    "name": "Strict",
                    "constraint": {
                      "type": "intrinsic",
                      "name": "boolean"
                    }
                  }
                ],
                "name": "VOSetConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/set.ts",
              "line": 77,
              "character": 18
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [305, 301, 298]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [311, 312]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [315]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/set.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 321,
      "name": "\"core/string\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/string.ts",
      "children": [
        {
          "id": 330,
          "name": "VOStringConstructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 331,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 332,
                  "name": "new VOStringConstructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 333,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 327,
                    "name": "VOStringInstance"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 40,
                  "character": 38
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [331]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/string.ts",
              "line": 40,
              "character": 36
            }
          ]
        },
        {
          "id": 327,
          "name": "VOStringInstance",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 328,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 329,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [328]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/string.ts",
              "line": 36,
              "character": 33
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "id": 446,
              "name": "BrazilianPhone"
            },
            {
              "type": "reference",
              "id": 450,
              "name": "Email"
            },
            {
              "type": "reference",
              "id": 458,
              "name": "LongString"
            },
            {
              "type": "reference",
              "id": 462,
              "name": "MediumString"
            },
            {
              "type": "reference",
              "id": 466,
              "name": "ShortString"
            }
          ]
        },
        {
          "id": 322,
          "name": "VOStringOptions",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 325,
              "name": "maxLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Maximum inclusive acceptable length after trimming.\nCan't be less than zero or smaller than `minLength`."
              },
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 28,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 324,
              "name": "minLength",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Minimum inclusive acceptable length after trimming.\nCan't be less than zero or bigger than `maxLength`."
              },
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 22,
                  "character": 11
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  }
                ]
              }
            },
            {
              "id": 326,
              "name": "pattern",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Regular expression pattern for the raw string after trimming."
              },
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 33,
                  "character": 9
                }
              ],
              "type": {
                "type": "reference",
                "name": "RegExp"
              }
            },
            {
              "id": 323,
              "name": "trim",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true,
                "isOptional": true
              },
              "comment": {
                "shortText": "Whether it should trim the raw string.",
                "tags": [
                  {
                    "tag": "default",
                    "text": "false\n"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 16,
                  "character": 6
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "false"
                  },
                  {
                    "type": "intrinsic",
                    "name": "true"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [325, 324, 326, 323]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/string.ts",
              "line": 11,
              "character": 32
            }
          ]
        },
        {
          "id": 334,
          "name": "VOString",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "comment": {
            "shortText": "Function to create a formatted string value object constructor.",
            "text": "> NOTE: If you have a list of strings and the value must be one\nof the strings, you should use {@link VOSet}.\n",
            "returns": "Class constructor that accepts a string for instantiation\nand returns that string when {@link VOStringInstance.valueOf} is called.\n",
            "tags": [
              {
                "tag": "example",
                "text": "\n```typescript\nclass UselessString extends VOString() {}\n\nconst string = new UselessString('abc'); // OK\nstring.valueOf(); // \"abc\"\n\nnew UselessString(5); // Compilation error: Not a string\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nclass SuperShortString extends VOString({\n  trim: true,\n  minLength: 4,\n  maxLength: 8\n}) {}\nnew SuperShortString('abcd'); // OK\nnew SuperShortString(' ab '); // Runtime error: Too short (the length after trimming is 2 but the minLength is 4)\nnew SuperShortString('123456789'); // Runtime error: Too long (the length after trimming is 9 but the maxLength is 8)\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nconst EMAIL_PATTERN = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\nclass Email extends VOString({\n  trim: true,\n  maxLength: 256,\n  pattern: EMAIL_PATTERN\n}) {}\nnew Email('test@example.com'); // OK\nnew Email('test.example.com'); // Runtime error: Value doesn't match pattern\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nconst PASSWORD_PATTERN = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]*$/; // One lowercase, one uppercase, one number\nclass Password extends VOString({\n  trim: false,\n  minLength: 8,\n  maxLength: 256,\n  pattern: PASSWORD_PATTERN\n}) {}\nnew Password('Secret123'); // OK\nnew Password('abcd1234'); // Runtime error: Value doesn't match pattern\nnew Password(' AB12ab '); // Runtime error: Too short (the length after trimming is 6 but the minLength is 8)\n```\n"
              },
              {
                "tag": "example",
                "text": "\n```typescript\nconst PASSWORD_BLACKLIST = ['Secret123', 'abc123ABC'];\nclass WhitelistedPassword extends Password {\n  constructor(raw: string) {\n    super(raw);\n    const trimmedRaw = this.valueOf();\n    if (PASSWORD_BLACKLIST.includes(trimmedRaw))\n      throw Error('This password is blacklisted');\n  }\n}\nnew WhitelistedPassword('Secret123'); // Runtime error: This password is blacklisted\nnew WhitelistedPassword('123Secret'); // OK\n```\n"
              }
            ]
          },
          "signatures": [
            {
              "id": 335,
              "name": "VOString",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Function to create a formatted string value object constructor.",
                "text": "> NOTE: If you have a list of strings and the value must be one\nof the strings, you should use {@link VOSet}.\n",
                "returns": "Class constructor that accepts a string for instantiation\nand returns that string when {@link VOStringInstance.valueOf} is called.\n",
                "tags": [
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass UselessString extends VOString() {}\n\nconst string = new UselessString('abc'); // OK\nstring.valueOf(); // \"abc\"\n\nnew UselessString(5); // Compilation error: Not a string\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nclass SuperShortString extends VOString({\n  trim: true,\n  minLength: 4,\n  maxLength: 8\n}) {}\nnew SuperShortString('abcd'); // OK\nnew SuperShortString(' ab '); // Runtime error: Too short (the length after trimming is 2 but the minLength is 4)\nnew SuperShortString('123456789'); // Runtime error: Too long (the length after trimming is 9 but the maxLength is 8)\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nconst EMAIL_PATTERN = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\nclass Email extends VOString({\n  trim: true,\n  maxLength: 256,\n  pattern: EMAIL_PATTERN\n}) {}\nnew Email('test@example.com'); // OK\nnew Email('test.example.com'); // Runtime error: Value doesn't match pattern\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nconst PASSWORD_PATTERN = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]*$/; // One lowercase, one uppercase, one number\nclass Password extends VOString({\n  trim: false,\n  minLength: 8,\n  maxLength: 256,\n  pattern: PASSWORD_PATTERN\n}) {}\nnew Password('Secret123'); // OK\nnew Password('abcd1234'); // Runtime error: Value doesn't match pattern\nnew Password(' AB12ab '); // Runtime error: Too short (the length after trimming is 6 but the minLength is 8)\n```\n"
                  },
                  {
                    "tag": "example",
                    "text": "\n```typescript\nconst PASSWORD_BLACKLIST = ['Secret123', 'abc123ABC'];\nclass WhitelistedPassword extends Password {\n  constructor(raw: string) {\n    super(raw);\n    const trimmedRaw = this.valueOf();\n    if (PASSWORD_BLACKLIST.includes(trimmedRaw))\n      throw Error('This password is blacklisted');\n  }\n}\nnew WhitelistedPassword('Secret123'); // Runtime error: This password is blacklisted\nnew WhitelistedPassword('123Secret'); // OK\n```\n"
                  }
                ]
              },
              "parameters": [
                {
                  "id": 336,
                  "name": "options",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Customizations for the returned class constructor."
                  },
                  "type": {
                    "type": "reference",
                    "id": 322,
                    "name": "VOStringOptions"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "id": 330,
                "name": "VOStringConstructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/string.ts",
              "line": 117,
              "character": 21
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [330, 327, 322]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [334]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/string.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 1,
      "name": "\"core/value-object\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/core/value-object.ts",
      "children": [
        {
          "id": 2,
          "name": "ValueObject",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "This is the base interface that drives this whole library.\nAll the utility functions, be it {@link VOInteger}, {@link VOArray} or {@link VOSet},\nthey all return classes that comply with the `ValueObject` interface.",
            "text": "The choice for `valueOf()` is **super** important because it allows us to leverage\nthe way that JavaScript works. Every Object in JavaScript implements `valueOf()`,\nit's a native thing. That means `Date`, `Boolean`, `Number`, and _many many many other_\nJavaScript classes comply with this library.\n"
          },
          "typeParameter": [
            {
              "id": 3,
              "name": "Raw",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Primitive(ish) representation of the value object.\n"
              }
            }
          ],
          "children": [
            {
              "id": 4,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 5,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "comment": {
                    "shortText": "Returns the primitive(ish) value that represents this value object."
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "Raw"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/value-object.ts",
                  "line": 17,
                  "character": 9
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [4]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/value-object.ts",
              "line": 13,
              "character": 28
            }
          ]
        },
        {
          "id": 12,
          "name": "ValueObjectContructor",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "comment": {},
          "typeParameter": [
            {
              "id": 13,
              "name": "Raw",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Primitive(ish) representation of the value object."
              }
            },
            {
              "id": 14,
              "name": "RawInit",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "Initial primitive(ish) used to instantiate the value object.\n"
              }
            }
          ],
          "children": [
            {
              "id": 15,
              "name": "constructor",
              "kind": 512,
              "kindString": "Constructor",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 16,
                  "name": "new ValueObjectContructor",
                  "kind": 16384,
                  "kindString": "Constructor signature",
                  "flags": {
                    "isExported": true
                  },
                  "parameters": [
                    {
                      "id": 17,
                      "name": "r",
                      "kind": 32768,
                      "kindString": "Parameter",
                      "flags": {
                        "isExported": true
                      },
                      "type": {
                        "type": "typeParameter",
                        "name": "RawInit"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "id": 2,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "Raw"
                      }
                    ],
                    "name": "ValueObject"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/value-object.ts",
                  "line": 34,
                  "character": 66
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "kind": 512,
              "children": [15]
            }
          ],
          "sources": [
            {
              "fileName": "src/core/value-object.ts",
              "line": 34,
              "character": 38
            }
          ]
        },
        {
          "id": 22,
          "name": "VOCRaw",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Returns the raw type of a value object constructor. The raw type is the type of\nthe value returned by the value object when calling `valueOf()`."
          },
          "typeParameter": [
            {
              "id": 23,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "The value object constructor from which the raw type is extracted.\n"
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/value-object.ts",
              "line": 64,
              "character": 18
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "typeParameter",
              "name": "VOC",
              "constraint": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            },
            "extendsType": {
              "type": "reference",
              "name": "ValueObjectContructor"
            },
            "trueType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "reference",
                      "name": "VOC"
                    }
                  ],
                  "name": "InstanceType"
                }
              ],
              "name": "VORaw"
            },
            "falseType": {
              "type": "intrinsic",
              "name": "never"
            }
          }
        },
        {
          "id": 20,
          "name": "VOCRawInit",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Returns the initial raw type of a value object constructor. The initial raw type is the\ntype of the value used to instantiate the value object when calling `constructor(rawInit)`."
          },
          "typeParameter": [
            {
              "id": 21,
              "name": "VOC",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "The value object constructor from which the initial raw type is extracted.\n"
              },
              "type": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/value-object.ts",
              "line": 56,
              "character": 22
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "typeParameter",
              "name": "VOC",
              "constraint": {
                "type": "reference",
                "id": 12,
                "name": "ValueObjectContructor"
              }
            },
            "extendsType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                },
                {
                  "type": "inferred",
                  "name": "T"
                }
              ],
              "name": "ValueObjectContructor"
            },
            "trueType": {
              "type": "typeParameter",
              "name": "T"
            },
            "falseType": {
              "type": "intrinsic",
              "name": "never"
            }
          }
        },
        {
          "id": 18,
          "name": "VORaw",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "comment": {
            "shortText": "Returns the raw type of a value object. The raw type is the type of the value\nreturned by the value object when calling `valueOf()`."
          },
          "typeParameter": [
            {
              "id": 19,
              "name": "VO",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              },
              "comment": {
                "shortText": "The value object from which the raw type is extracted.\n"
              },
              "type": {
                "type": "reference",
                "id": 2,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValueObject"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/core/value-object.ts",
              "line": 44,
              "character": 17
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "typeParameter",
              "name": "VO",
              "constraint": {
                "type": "reference",
                "id": 2,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValueObject"
              }
            },
            "extendsType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "ValueObjectWorkAround"
            },
            "trueType": {
              "type": "reference",
              "typeArguments": [
                {
                  "type": "indexedAccess",
                  "indexType": {
                    "type": "stringLiteral",
                    "value": "toRaw"
                  },
                  "objectType": {
                    "type": "reference",
                    "name": "VO"
                  }
                }
              ],
              "name": "ReturnType"
            },
            "falseType": {
              "type": "conditional",
              "checkType": {
                "type": "typeParameter",
                "name": "VO",
                "constraint": {
                  "type": "reference",
                  "id": 2,
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "name": "ValueObject"
                }
              },
              "extendsType": {
                "type": "reference",
                "typeArguments": [
                  {
                    "type": "inferred",
                    "name": "R"
                  }
                ],
                "name": "ValueObject"
              },
              "trueType": {
                "type": "typeParameter",
                "name": "R"
              },
              "falseType": {
                "type": "intrinsic",
                "name": "never"
              }
            }
          }
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [2, 12]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [22, 20, 18]
        }
      ],
      "sources": [
        {
          "fileName": "src/core/value-object.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 445,
      "name": "\"lib/brazilian-phone\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/brazilian-phone.ts",
      "children": [
        {
          "id": 446,
          "name": "BrazilianPhone",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 447,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 448,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 328,
                    "name": "VOStringInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 328,
                "name": "VOStringInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [447]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/brazilian-phone.ts",
              "line": 4,
              "character": 27
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 327,
              "name": "VOStringInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [446]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/brazilian-phone.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 449,
      "name": "\"lib/email\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/email.ts",
      "children": [
        {
          "id": 450,
          "name": "Email",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 451,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 452,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 328,
                    "name": "VOStringInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 328,
                "name": "VOStringInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [451]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/email.ts",
              "line": 4,
              "character": 18
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 327,
              "name": "VOStringInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [450]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/email.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 469,
      "name": "\"lib/index\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/index.ts",
      "children": [
        {
          "id": 470,
          "name": "BrazilianPhone",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 446
        },
        {
          "id": 471,
          "name": "Email",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 450
        },
        {
          "id": 473,
          "name": "LongString",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 458
        },
        {
          "id": 474,
          "name": "MediumString",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 462
        },
        {
          "id": 472,
          "name": "NaturalNumber",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 454
        },
        {
          "id": 475,
          "name": "ShortString",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 466
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [470, 471, 473, 474, 472, 475]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 457,
      "name": "\"lib/long-string\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/long-string.ts",
      "children": [
        {
          "id": 458,
          "name": "LongString",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 459,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 460,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 328,
                    "name": "VOStringInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 328,
                "name": "VOStringInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [459]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/long-string.ts",
              "line": 4,
              "character": 23
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 327,
              "name": "VOStringInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [458]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/long-string.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 461,
      "name": "\"lib/medium-string\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/medium-string.ts",
      "children": [
        {
          "id": 462,
          "name": "MediumString",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 463,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 464,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 328,
                    "name": "VOStringInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 328,
                "name": "VOStringInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [463]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/medium-string.ts",
              "line": 4,
              "character": 25
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 327,
              "name": "VOStringInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [462]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/medium-string.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 453,
      "name": "\"lib/natural-number\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/natural-number.ts",
      "children": [
        {
          "id": 454,
          "name": "NaturalNumber",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 455,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 456,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 248,
                    "name": "VOIntegerInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/integer.ts",
                  "line": 18,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 248,
                "name": "VOIntegerInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [455]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/natural-number.ts",
              "line": 3,
              "character": 26
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 247,
              "name": "VOIntegerInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [454]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/natural-number.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 476,
      "name": "\"lib/percentage\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/percentage.ts",
      "children": [
        {
          "id": 477,
          "name": "Percentage",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 478,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 479,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 234,
                    "name": "VOFloatInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/float.ts",
                  "line": 30,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 234,
                "name": "VOFloatInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [478]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/percentage.ts",
              "line": 3,
              "character": 23
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 233,
              "name": "VOFloatInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [477]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/percentage.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 465,
      "name": "\"lib/short-string\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/lib/short-string.ts",
      "children": [
        {
          "id": 466,
          "name": "ShortString",
          "kind": 128,
          "kindString": "Class",
          "flags": {
            "isExported": true
          },
          "children": [
            {
              "id": 467,
              "name": "valueOf",
              "kind": 2048,
              "kindString": "Method",
              "flags": {
                "isExported": true
              },
              "signatures": [
                {
                  "id": 468,
                  "name": "valueOf",
                  "kind": 4096,
                  "kindString": "Call signature",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "id": 328,
                    "name": "VOStringInstance.valueOf"
                  }
                }
              ],
              "sources": [
                {
                  "fileName": "src/core/string.ts",
                  "line": 37,
                  "character": 9
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "id": 328,
                "name": "VOStringInstance.valueOf"
              }
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "kind": 2048,
              "children": [467]
            }
          ],
          "sources": [
            {
              "fileName": "src/lib/short-string.ts",
              "line": 4,
              "character": 24
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "id": 327,
              "name": "VOStringInstance"
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "kind": 128,
          "children": [466]
        }
      ],
      "sources": [
        {
          "fileName": "src/lib/short-string.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 391,
      "name": "\"main\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/main.ts",
      "children": [
        {
          "id": 408,
          "name": "LogicError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 123
        },
        {
          "id": 399,
          "name": "MaxLengthError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 25
        },
        {
          "id": 400,
          "name": "MaxSizeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 36
        },
        {
          "id": 401,
          "name": "MinLengthError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 47
        },
        {
          "id": 402,
          "name": "MinSizeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 58
        },
        {
          "id": 425,
          "name": "Noneable",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 290
        },
        {
          "id": 403,
          "name": "NotInSetError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 69
        },
        {
          "id": 404,
          "name": "NotIntegerError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 82
        },
        {
          "id": 405,
          "name": "PatternError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 93
        },
        {
          "id": 406,
          "name": "RawTypeError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 100
        },
        {
          "id": 430,
          "name": "Setable",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 311
        },
        {
          "id": 407,
          "name": "UnknownError",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 116
        },
        {
          "id": 394,
          "name": "VOAny",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 143
        },
        {
          "id": 393,
          "name": "VOAnyConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 138
        },
        {
          "id": 392,
          "name": "VOAnyInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 133
        },
        {
          "id": 398,
          "name": "VOArray",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 222
        },
        {
          "id": 397,
          "name": "VOArrayConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 217
        },
        {
          "id": 396,
          "name": "VOArrayInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 211
        },
        {
          "id": 395,
          "name": "VOArrayOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 207
        },
        {
          "id": 444,
          "name": "VOCRaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 22
        },
        {
          "id": 443,
          "name": "VOCRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 20
        },
        {
          "id": 412,
          "name": "VOFloat",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 240
        },
        {
          "id": 411,
          "name": "VOFloatConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 236
        },
        {
          "id": 410,
          "name": "VOFloatInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 233
        },
        {
          "id": 409,
          "name": "VOFloatOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 228
        },
        {
          "id": 420,
          "name": "VOInteger",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 254
        },
        {
          "id": 419,
          "name": "VOIntegerConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 250
        },
        {
          "id": 418,
          "name": "VOIntegerInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 247
        },
        {
          "id": 417,
          "name": "VOIntegerOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 244
        },
        {
          "id": 424,
          "name": "VOObject",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 268
        },
        {
          "id": 423,
          "name": "VOObjectConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 260
        },
        {
          "id": 422,
          "name": "VOObjectInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 265
        },
        {
          "id": 421,
          "name": "VOObjectOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 258
        },
        {
          "id": 428,
          "name": "VOOptional",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 291
        },
        {
          "id": 427,
          "name": "VOOptionalConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 284
        },
        {
          "id": 426,
          "name": "VOOptionalInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 274
        },
        {
          "id": 442,
          "name": "VORaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 18
        },
        {
          "id": 434,
          "name": "VOSet",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 315
        },
        {
          "id": 433,
          "name": "VOSetConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 305
        },
        {
          "id": 432,
          "name": "VOSetInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 301
        },
        {
          "id": 429,
          "name": "VOSetOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 298
        },
        {
          "id": 431,
          "name": "VOSetRaw",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 312
        },
        {
          "id": 438,
          "name": "VOString",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 334
        },
        {
          "id": 437,
          "name": "VOStringConstructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 330
        },
        {
          "id": 436,
          "name": "VOStringInstance",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 327
        },
        {
          "id": 435,
          "name": "VOStringOptions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 322
        },
        {
          "id": 439,
          "name": "ValueObject",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 2
        },
        {
          "id": 441,
          "name": "ValueObjectContructor",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 12
        },
        {
          "id": 415,
          "name": "ValueObjectFunctions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 186
        },
        {
          "id": 414,
          "name": "makeFromRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 198
        },
        {
          "id": 416,
          "name": "makeFunctions",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 202
        },
        {
          "id": 413,
          "name": "makeIsValidRawInit",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 194
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [
            408,
            399,
            400,
            401,
            402,
            425,
            403,
            404,
            405,
            406,
            430,
            407,
            394,
            393,
            392,
            398,
            397,
            396,
            395,
            444,
            443,
            412,
            411,
            410,
            409,
            420,
            419,
            418,
            417,
            424,
            423,
            422,
            421,
            428,
            427,
            426,
            442,
            434,
            433,
            432,
            429,
            431,
            438,
            437,
            436,
            435,
            439,
            441,
            415,
            414,
            416,
            413
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/main.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 147,
      "name": "\"utils/either\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/utils/either.ts",
      "children": [
        {
          "id": 148,
          "name": "Left",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 149,
              "name": "L",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            }
          ],
          "children": [
            {
              "id": 150,
              "name": "_tag",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "src/utils/either.ts",
                  "line": 2,
                  "character": 6
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Left"
              }
            },
            {
              "id": 151,
              "name": "left",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "src/utils/either.ts",
                  "line": 3,
                  "character": 6
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "L"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [150, 151]
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 1,
              "character": 21
            }
          ]
        },
        {
          "id": 152,
          "name": "Right",
          "kind": 256,
          "kindString": "Interface",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 153,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            }
          ],
          "children": [
            {
              "id": 154,
              "name": "_tag",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "src/utils/either.ts",
                  "line": 7,
                  "character": 6
                }
              ],
              "type": {
                "type": "stringLiteral",
                "value": "Right"
              }
            },
            {
              "id": 155,
              "name": "right",
              "kind": 1024,
              "kindString": "Property",
              "flags": {
                "isExported": true
              },
              "sources": [
                {
                  "fileName": "src/utils/either.ts",
                  "line": 8,
                  "character": 7
                }
              ],
              "type": {
                "type": "typeParameter",
                "name": "R"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "kind": 1024,
              "children": [154, 155]
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 6,
              "character": 22
            }
          ]
        },
        {
          "id": 156,
          "name": "Either",
          "kind": 4194304,
          "kindString": "Type alias",
          "flags": {
            "isExported": true
          },
          "typeParameter": [
            {
              "id": 157,
              "name": "L",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            },
            {
              "id": 158,
              "name": "R",
              "kind": 131072,
              "kindString": "Type parameter",
              "flags": {
                "isExported": true
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 11,
              "character": 18
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "id": 148,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "L"
                  }
                ],
                "name": "Left"
              },
              {
                "type": "reference",
                "id": 152,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  }
                ],
                "name": "Right"
              }
            ]
          }
        },
        {
          "id": 159,
          "name": "isLeft",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 160,
              "name": "isLeft",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 161,
                  "name": "L",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                },
                {
                  "id": 162,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 163,
                  "name": "either",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 156,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "L"
                      },
                      {
                        "type": "typeParameter",
                        "name": "R"
                      }
                    ],
                    "name": "Either"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "either",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "L"
                    }
                  ],
                  "name": "Left"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 13,
              "character": 19
            }
          ]
        },
        {
          "id": 164,
          "name": "isRight",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 165,
              "name": "isRight",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 166,
                  "name": "L",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                },
                {
                  "id": 167,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 168,
                  "name": "either",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "reference",
                    "id": 156,
                    "typeArguments": [
                      {
                        "type": "typeParameter",
                        "name": "L"
                      },
                      {
                        "type": "typeParameter",
                        "name": "R"
                      }
                    ],
                    "name": "Either"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "either",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "typeArguments": [
                    {
                      "type": "typeParameter",
                      "name": "R"
                    }
                  ],
                  "name": "Right"
                }
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 15,
              "character": 20
            }
          ]
        },
        {
          "id": 169,
          "name": "left",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 170,
              "name": "left",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 171,
                  "name": "L",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 172,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "L"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 148,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "L"
                  }
                ],
                "name": "Left"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 17,
              "character": 17
            }
          ]
        },
        {
          "id": 173,
          "name": "right",
          "kind": 64,
          "kindString": "Function",
          "flags": {
            "isExported": true,
            "isConst": true
          },
          "signatures": [
            {
              "id": 174,
              "name": "right",
              "kind": 4096,
              "kindString": "Call signature",
              "flags": {
                "isExported": true
              },
              "typeParameter": [
                {
                  "id": 175,
                  "name": "R",
                  "kind": 131072,
                  "kindString": "Type parameter",
                  "flags": {
                    "isExported": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 176,
                  "name": "value",
                  "kind": 32768,
                  "kindString": "Parameter",
                  "flags": {
                    "isExported": true
                  },
                  "type": {
                    "type": "typeParameter",
                    "name": "R"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "id": 152,
                "typeArguments": [
                  {
                    "type": "typeParameter",
                    "name": "R"
                  }
                ],
                "name": "Right"
              }
            }
          ],
          "sources": [
            {
              "fileName": "src/utils/either.ts",
              "line": 22,
              "character": 18
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Interfaces",
          "kind": 256,
          "children": [148, 152]
        },
        {
          "title": "Type aliases",
          "kind": 4194304,
          "children": [156]
        },
        {
          "title": "Functions",
          "kind": 64,
          "children": [159, 164, 169, 173]
        }
      ],
      "sources": [
        {
          "fileName": "src/utils/either.ts",
          "line": 1,
          "character": 0
        }
      ]
    },
    {
      "id": 177,
      "name": "\"utils/index\"",
      "kind": 1,
      "kindString": "Module",
      "flags": {
        "isExported": true
      },
      "originalName": "/Users/Lucas/Documents/dev/lucas-paganini/value-objects/src/utils/index.ts",
      "children": [
        {
          "id": 180,
          "name": "Either",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 156
        },
        {
          "id": 178,
          "name": "Left",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 148
        },
        {
          "id": 179,
          "name": "Right",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 152
        },
        {
          "id": 181,
          "name": "isLeft",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 159
        },
        {
          "id": 182,
          "name": "isRight",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 164
        },
        {
          "id": 183,
          "name": "left",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 169
        },
        {
          "id": 184,
          "name": "right",
          "kind": 16777216,
          "kindString": "Reference",
          "flags": {
            "isExported": true
          },
          "target": 173
        }
      ],
      "groups": [
        {
          "title": "References",
          "kind": 16777216,
          "children": [180, 178, 179, 181, 182, 183, 184]
        }
      ],
      "sources": [
        {
          "fileName": "src/utils/index.ts",
          "line": 1,
          "character": 0
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "kind": 1,
      "children": [
        132,
        206,
        24,
        227,
        185,
        337,
        243,
        257,
        273,
        297,
        321,
        1,
        445,
        449,
        469,
        457,
        461,
        453,
        476,
        465,
        391,
        147,
        177
      ]
    }
  ]
}
